variables:
  SERVICE_NAME: divide_backend
  SERVICE_PORT: 8001
  IMAGE_TAG: ${SERVICE_NAME}:$CI_COMMIT_SHORT_SHA
  PROD_DB_HOST: localhost
  PROD_DB_PORT: 5432
  PROD_DB_NAME: divide_experience
  PROD_DB_SCHEME: article_service
  PROD_DB_USER: postgres
  PROD_JAVA_TOOL_OPTIONS: "-Xms400m -Xmx800m -XX:StringTableSize=10000"

stages:
  - deploy-prod-divide-back
  - deploy-prod-divide-postgres-db
  - deploy-prod-divide-nginx

deploy-prod-divide-back:
  when: manual
  stage: deploy-prod-divide-back
  tags:
    - prod
  script:
    - pwd
    - whoami
    - mvn -f divideExperience/articleService clean install -Dmaven.test.skip=true
    - docker stop ${SERVICE_NAME} || true
    - docker rm ${SERVICE_NAME} || true
    - rm -rf ./.docker/loyalty-impl-0.0.0.1.jar
    - cp ./loyalty-impl/target/loyalty-impl-0.0.0.1.jar .docker
    - export PROFILE=prod
    - export DB_PASS=${PROD_DB_PASS}
    - export DB_HOST=divide-db
    - export JWT_SECRET=${PROD_JWT_SECRET}
    - docker network create -d bridge divide || true
    - ls -l
    - docker-compose -f .docker/docker-compose.prod.yaml up -d divide-backend

deploy-prod-divide-postgres-db:
  when: manual
  stage: deploy-prod-postgres-db
  tags:
    - prod
  script:
    - docker stop divide_db && docker rm divide_db
    - export DB_PASS=${PROD_DB_PASS}
    - docker network create -d bridge divide || true
    - docker-compose -f .docker/docker-compose.prod.yaml up -d divide-db

deploy-prod-divide-nginx:
  when: manual
  stage: deploy-prod-divide-nginx
  tags:
    - prod
  script:
    - sudo cp .nginx/nginx.conf /etc/nginx/nginx.conf
    - sudo cp -r .nginx/conf.d/app_prod.conf /etc/nginx/conf.d/app.conf
    - sudo nginx -t
    - sudo systemctl restart nginx
